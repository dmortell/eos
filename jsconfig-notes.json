{
  "compilerOptions": {
	  "target": "esnext",		// esnext or es2019
	  "module": "esnext",
	  "moduleResolution": "node",
	  "esModuleInterop": true,
	  "strict": true,
	  "resolveJsonModule": true,
	  "skipLibCheck": true,
	  "baseUrl": ".",
	  "sourceMap": true,						    /* enable sourcemaps for correct line numbers in Svelte compiler warnings/errors */
	  /*
	  "noEmit": true,
	added this to prevent 'source-map' not found error */
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    "isolatedModules": true,
    "forceConsistentCasingInFileNames": true,
	"paths":{
		"$js/*": 	["src/js/*"],
		"$pages/*":	["./src/pages/*"],
		"$lib/*":	["./src/lib/*"]
	},
	"checkJs": false 						   /* Typecheck JS in `.svelte` and `.js` files. Disable this if you'd like to use dynamic types */
  },
  /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   "exclude": ["node_modules/*",  "dist/*", "src/unused/*"],
   */
   "exclude": [ "**/dist", "**/node_modules" ],
   "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte"]



,

	"compilerOptions": {
		"target": "esnext",
		"module": "esnext",
		"moduleResolution": "node",
		"esModuleInterop": true,
		"strict": true,
		"resolveJsonModule": true,
		"skipLibCheck": true,
		"baseUrl": ".",
		"sourceMap": true,
	  "importsNotUsedAsValues": "error",
	  "isolatedModules": true,
	  "forceConsistentCasingInFileNames": true,
	  "paths":{
		  "$js/*": 	["src/js/*"],
		  "$pages/*":	["./src/pages/*"],
		  "$lib/*":	["./src/lib/*"]
	  },
	  "checkJs": false
	},
	 "exclude": [ "**/dist", "**/node_modules" ],
	 "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte"]
  }
